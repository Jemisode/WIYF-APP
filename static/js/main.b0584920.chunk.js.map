{"version":3,"sources":["components/Header/Header.js","axios.js","components/Search/Search.js","components/Search/index.js","data/actions/state.js","components/RecipeList/RecipeList.js","components/RecipeList/index.js","components/Method/Method.js","components/Ingredients/Ingredients.js","components/Tabs/Tabs.js","components/Recipe/Recipe.js","components/Recipe/index.js","components/App.js","data/initial.js","data/reducer.js","data/store.js","index.js"],"names":["Header","className","style","textDecoration","color","to","axios","create","baseURL","headers","Accept","Search","props","state","ingredient","ingredientID","error","ingredients","loaded","handleChange","bind","handleClick","handleDelete","e","id","this","find","name","currentTarget","value","setState","undefined","chosenIngredients","handleIngredient","length","map","includes","preventDefault","handleRemoveIngredient","get","then","data","height","maxWidth","htmlFor","type","onChange","list","key","onClick","index","Component","connect","dispatch","addIngredient","removeIngredient","RecipeList","recipesDisplayed","expanded","recipes","handleChoice","updateRecipe","ids","url","Array","isArray","Object","values","slice","recipe","description","num_servings","prep_time","Ingredients","method","split","step","quantity","Tabs","handleIngredients","handleMethod","role","Method","Recipe","chosenRecipe","App","exact","path","component","initial","chosenIngredientsIDs","reducer","action","filter","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0584920.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => (\n    <div className=\"card bg-info my-3\">\n        <h1><Link style={{ textDecoration: \"none\", color: \"#FFC107\" }} to=\"/\" >What's In Your Fridge</Link></h1>\n    </div>\n);\nexport default Header;","// import the axios library \nimport axios from \"axios\";\n// return a new version of axios with useful settings applied \nexport default axios.create({ \n    baseURL: \"https://tasty.developme.space/api/\", \n    headers: { \n        Accept: \"application/json\",\n    }, \n});","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport axios from '../../axios';\n\nclass Search extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            ingredient: \"\",\n            ingredientID: 0,\n            error: false,\n            ingredients: [],\n            loaded: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n    }   \n    \n    handleChange(e) {\n        let id = this.state.ingredients.find(ingredient => ingredient.name === e.currentTarget.value);\n\n        this.setState({\n            ingredient: e.currentTarget.value,\n            ingredientID: id === undefined ? 0 : id.id,\n            error: false\n        });\n    } \n\n    handleClick() {\n        let { chosenIngredients, handleIngredient } = this.props;\n        let { ingredients } = this.state;\n\n        let name = this.state.ingredient;\n        let id = this.state.ingredientID;\n\n        if (chosenIngredients.length <= 2 && ingredients.map(ingredient => ingredient.name).includes(name) && !chosenIngredients.map(ingredient => ingredient.name).includes(name)) {\n            handleIngredient(id, name);\n            this.setState({ ingredient: \"\", ingredientID: 0 });\n        } else {\n            this.setState({ error: true });\n        }\n    }\n\n    handleDelete(e, id) {\n        e.preventDefault();\n        this.props.handleRemoveIngredient(id);\n    }\n\n    componentDidMount() {\n        axios.get(\"/ingredients\").then(({ data }) => {\n            this.setState({\n                loaded: true,\n                ingredients: data\n            });\n        });\n    }\n\n    render() {\n        let { ingredient, error, ingredients, loaded } = this.state;\n        let { chosenIngredients } = this.props;\n\n        return !loaded ? <p>Loading...</p> : (\n            <div className=\"d-flex flex-column justify-content-center text-center\" style={{ height: \"70vh\" }}>\n                <div className=\"card bg-info text-white d-flex align-items-center py-5\">\n                    <form className=\"\">\n                        <div className=\"form-group\" style={{ maxWidth: 250 }}>\n                            <label htmlFor=\"ingredient-choice\"><h4>Pick Your Ingredients</h4></label>\n\n                            <input\n                                type=\"text\"\n                                className=\"form-control my-2\"\n                                onChange={ (e) => this.handleChange(e) }\n                                value={ ingredient }\n                                list=\"ingredients\"\n                                id=\"ingredient-choice\"\n                            />\n\n                            <datalist id=\"ingredients\">\n                                { ingredients.map((ingredient) => {\n                                    return (<option key={ ingredient.id } value={ ingredient.name } />);\n                                }) }\n                            </datalist>\n\n                            <button type=\"button\" className=\"btn btn-warning btn-block my-3 text-secondary font-weight-bold\" onClick={ this.handleClick }>Add</button>\n\n                            { error ? <p className=\"text-warning\">Please pick up to 3 different ingredients, from our list</p> : null }\n                        </div>\n\n                        <div className=\"form-group\">\n                            <h4>Ingredients</h4>\n                            <ul className=\"col\">\n                                { chosenIngredients.map((ingredient, index) => (\n                                    <div key={ index } className=\"row\">\n                                        <li><h5>{ ingredient.name }</h5></li>\n                                        <button onClick={ (e) => this.handleDelete(e, ingredient.id) } className=\"btn btn-danger btn-sm ml-3 font-weight-bold\">X</button>\n                                    </div>\n                                )) }\n                            </ul>\n                \n                            <Link to='/recipes'>\n                                <button type=\"submit\" className=\"btn btn-warning btn-block text-secondary font-weight-bold\" >Find Recipes</button>\n                            </Link>\n                        </div> \n                    </form>\n                </div>\n            </div>\n        );\n    };\n}\n\nexport default Search;","import { connect } from 'react-redux';\n \nimport Search from './Search';\nimport { addIngredient, removeIngredient, addIngredientID } from \"../../data/actions/state\";\n\nconst mapStateToProps = state => { \n    return { \n        ingredients: state.ingredients,\n        chosenIngredients: state.chosenIngredients,\n    }; \n};\n\nconst mapDispatchToProps = dispatch => { \n    return { \n        handleIngredient: (id, name) => dispatch(addIngredient(id, name)),\n        handleRemoveIngredient: (id) => dispatch(removeIngredient(id)),\n    }; \n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","export const addIngredient = (id, name) => {\n    return { type: \"add\", id: id, name: name };\n};\n\nexport const removeIngredient = (id) => {\n    return { type: \"remove\", id: id };\n};\n\nexport const updateRecipe = (id) => {\n    return { type: \"update\", recipe: id };\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport axios from '../../axios';\n\nclass RecipeList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            recipesDisplayed: 2,\n            expanded: false,\n            recipes: [],\n            loaded: false,\n            error: false,\n        };\n\n        this.handleClick = this.handleClick.bind(this);\n        this.handleChoice = this.handleChoice.bind(this);\n    }   \n\n    handleClick() {\n        this.state.recipesDisplayed === 2 ? (\n            this.setState({ recipesDisplayed: this.state.recipes.length, expanded: true })\n        ) : (\n            this.setState({ recipesDisplayed: 2, expanded: false })\n        )\n    }\n\n    handleChoice(e, id) {\n        this.props.updateRecipe(id);\n    }\n\n    componentDidMount() {\n        let { ids } = this.props;\n        let url = \"\";\n\n        ids.map(id => {\n            url += `/${id}`;\n            return url;\n        });   \n        \n        this.setState({ error: false });\n\n        axios.get(`/recipes/match${url}`).then(({ data }) => {\n            if (data !== \"No recipe found! Try different ingredients!\") {\n                this.setState({\n                    loaded: true,\n                    // data is either object or array - checking for this and coverting objects to array\n                    recipes: Array.isArray(data) ? data : Object.values(data),\n                });\n            // if no match, returning error\n            } else {\n                this.setState({\n                    loaded: true,\n                    error: true,\n                });\n            }\n        });\n    }\n    \n    render() {\n        let { recipesDisplayed, recipes, loaded, error } = this.state;\n\n        return !loaded ? <p>Loading...</p> : error ? \n            <div className=\"card bg-info\"><p className=\"text-white px-4 pt-2\">No recipes found! Try different ingredients!</p></div> : (\n            <div className=\"d-flex container flex-column justify-content-center\">\n                { recipes.slice(0, recipesDisplayed).map((recipe, index) => (\n                    <Link key={index} to=\"/my-recipe\">\n                        <div onClick={ (e) => this.handleChoice(e, recipe.id) } style={{ textDecoration: \"none\" }} className=\"card bg-info text-white d-flex align-items-center my-4\">\n                            <div className=\"row no-gutters\">\n                                {/* not including images currently - will come back to this */}\n                                {/* <div>\n                                <img src={ recipe.image_url } className=\"card-img\" alt={ recipe.image_alt } />\n                                </div> */}\n                                <div>\n                                    <div className=\"card-body\">\n                                        <h3 className=\"card-title\">{ recipe.name }</h3>\n                                        <p className=\"card-text\">{ recipe.description }</p>\n                                        <div className=\"d-flex flex-row justify-content-center card bg-warning\">\n                                            <p className=\"d-inline text-secondary text-center font-weight-bold m-2 mr-5\">Serves { recipe.num_servings }</p>\n                                            <p className=\"d-inline text-secondary text-center font-weight-bold m-2 ml-5\">Prep time { recipe.prep_time }</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </Link>\n                )) }\n\n                <button className=\"btn btn-warning text-secondary font-weight-bold border border-info m-3 mb-4\" onClick={ this.handleClick }>\n                    { this.state.expanded ?  <span>Show less</span> : <span>Show more</span> }\n                </button>\n            </div> \n        );\n    };\n}\n\nexport default RecipeList;","import { connect } from 'react-redux';\n \nimport RecipeList from './RecipeList';\nimport { updateRecipe } from '../../data/actions/state'\n\nconst mapStateToProps = ({ chosenIngredients }) => { \n    return { \n        ids: chosenIngredients.map(ingredient => ingredient.id)\n    }; \n};\n\nconst mapDispatchToProps = dispatch => { \n    return { \n        updateRecipe: (id) => dispatch(updateRecipe(id)),\n    }; \n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipeList);\n","import React from 'react';\n\nconst Ingredients = ({ method }) => (\n    <ul>\n        { method.split(\"#\").map((step, index) => (\n            step !== \"\" ? <li className=\"pr-4\" key={ index }>{ step }</li> : null\n        ))}\n    </ul>\n);\nexport default Ingredients;","import React from 'react';\n\nconst Ingredients = ({ ingredients }) => (\n    <ul>\n        { ingredients.map((ingredient, index) => (\n            <li key={ index }>{ ingredient.name } - { ingredient.quantity }</li>\n        ))}\n    </ul>\n);\nexport default Ingredients;","import React, { Component } from 'react';\n\nimport Method from '../Method/Method';\nimport Ingredients from '../Ingredients/Ingredients';\n\nclass Tabs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            ingredients: true \n        };\n\n        this.handleIngredients = this.handleIngredients.bind(this);\n        this.handleMethod = this.handleMethod.bind(this);\n    }   \n    \n    handleIngredients() {\n       this.setState({ ingredients: true })\n    }\n\n    handleMethod() {\n        this.setState({ ingredients: false })\n     }\n\n    render() {\n        let { ingredients } = this.state;\n\n        return (\n            <>\n                <div className=\"tab d-flex flex-row btn-group card bg-warning mx-3 mt-5\" role=\"group\">\n                    <button className={`tablinks d-inline btn btn-warning text-dark font-weight-bold px-5 border border-info ${ ingredients ? \"active\" : null }`} type=\"button\" onClick={ this.handleIngredients }>Ingredients</button>\n                    <button className=\"tablinks d-inline btn btn-warning text-dark font-weight-bold px-5 border border-info\" type=\"button\" onClick={ this.handleMethod }>Method</button>\n                </div>\n\n                { ingredients ? \n                    <div id=\"Ingredients\" className=\"tabcontent card bg-warning text-dark d-flex w-100 p-2 mb-4\">\n                        <Ingredients ingredients={ this.props.ingredients }/>\n                    </div> :\n                    <div id=\"Method\" className=\"tabcontent card bg-warning text-dark d-flex w-100 p-2 mb-4\">\n                        <Method method={ this.props.method }/>\n                    </div> \n                }\n            </>\n        );\n    };\n}\n\nexport default Tabs;","import React, { Component } from 'react';\nimport axios from '../../axios';\n\nimport Tabs from '../Tabs/Tabs';\n\nclass Recipe extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            recipe: {},\n            loaded: false\n        };\n    }   \n\n    // need to come back to this\n    componentDidMount() {\n        let id = this.props.recipe;\n        axios.get(`recipes/${id}`).then(({ data }) => {\n            let recipe = data.data;\n            this.setState({\n                loaded: true,\n                // recipe object\n                recipe: recipe\n            });\n        });\n    }\n    \n    render() {\n        let { recipe, loaded } = this.state;\n\n        return !loaded ? <p>Loading...</p> : (\n            <div className=\"card bg-info text-white d-flex align-items-center p-4 mt-5\">\n                <h2 className=\"text-warning\">{ recipe.name }</h2>\n                <p className=\"mt-3\">{ recipe.description }</p>\n                <div className=\"d-flex flex-row justify-content-center card bg-warning m-0 mt-4\">\n                    <p className=\"d-inline text-secondary text-center font-weight-bold m-2 mr-5\">Serves { recipe.num_servings }</p>\n                    <p className=\"d-inline text-secondary text-center font-weight-bold m-2 ml-5\">Prep time { recipe.prep_time }</p>\n                </div>\n                <Tabs ingredients={ recipe.ingredients } method={ recipe.method } />\n            </div>\n            \n        );\n    };\n}\n\nexport default Recipe;","import { connect } from 'react-redux';\n \nimport Recipe from './Recipe';\n\nconst mapStateToProps = state => { \n    return { \n        recipe: state.chosenRecipe,\n    }; \n};\n\nexport default connect(mapStateToProps)(Recipe);\n","import React from 'react';\n\nimport { \n    BrowserRouter as Router, \n    Route, \n} from 'react-router-dom';\n\nimport Header from './Header/Header';\nimport Search from './Search';\nimport RecipeList from './RecipeList';\nimport Recipe from './Recipe';\n\nconst App = () => (\n    <Router>\n        <>\n            <Header />\n            <Route exact path=\"/\" component={ Search} />\n            <Route exact path=\"/recipes\" component={ RecipeList } />\n            <Route exact path=\"/my-recipe\" component={ Recipe } />\n            \n        </>\n    </Router>\n);\nexport default App;","const initial = {\n    chosenIngredients: [],\n    chosenIngredientsIDs: [],\n    chosenRecipe: 1,\n};\n\nexport default initial;","import initial from './initial';\n\nconst addIngredient = (state, { id, name }) => {\n    return {\n        ...state,\n        chosenIngredients: [...state.chosenIngredients, {id: id, name: name}], \n    };\n};\n\nconst removeIngredient = (state, { id }) => {\n    return {\n        ...state,\n        chosenIngredients: state.chosenIngredients.filter(ingredient => ingredient.id !== id ), \n    };\n};\n\nconst updateRecipe = (state, { recipe }) => {\n    return {\n        ...state,\n        chosenRecipe: recipe, \n    };\n};\n\nconst reducer = (state, action) => {\n    switch (action.type) { \n        case \"add\": return addIngredient(state, action);\n        case \"remove\": return removeIngredient(state, action);\n        case \"update\": return updateRecipe(state, action);\n        default: return state;\n    }; \n};\n\nexport default reducer;","import { createStore, applyMiddleware, compose } from 'redux';\n\n// needed to implement redux-localstorage\n// import persistState from 'redux-localstorage';\n\n// needed to implement thunk\n// import thunk from \"redux-thunk\";\n\nimport initial from './initial';\nimport reducer from './reducer';\n\n// needed to implement redux-localstorage && thunk with redux devtools\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    reducer, \n    initial, \n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n    // needed to implement redux-localstorage\n    // composeEnhancers(persistState()),\n    // needed to implement thunk\n    // composeEnhancers(applyMiddleware(thunk)),\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\n\nimport store from './data/store';\n\nReactDOM.render(\n    <Provider store={ store }>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n"],"sourceRoot":""}